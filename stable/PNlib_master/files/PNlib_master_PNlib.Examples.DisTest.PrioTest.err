Running: ./testmodel.py --libraries=/home/runner/.openmodelica/libraries/ --ompython_omhome= PNlib_master_PNlib.Examples.DisTest.PrioTest.conf.json
loadFile("/home/runner/.openmodelica/libraries/ModelicaServices 4.0.0+maint.om/package.mo", uses=false)
loadFile("/home/runner/.openmodelica/libraries/Complex 4.0.0+maint.om/package.mo", uses=false)
loadFile("/home/runner/.openmodelica/libraries/Modelica 4.0.0+maint.om/package.mo", uses=false)
loadFile("/home/runner/work/PNlib/PNlib/PNlib/package.mo", uses=false)
Using package PNlib with version 2.2 (/home/runner/work/PNlib/PNlib/PNlib/package.mo)
Using package Modelica with version 4.0.0 (/home/runner/.openmodelica/libraries/Modelica 4.0.0+maint.om/package.mo)
Using package Complex with version 4.0.0 (/home/runner/.openmodelica/libraries/Complex 4.0.0+maint.om/package.mo)
Using package ModelicaServices with version 4.0.0 (/home/runner/.openmodelica/libraries/ModelicaServices 4.0.0+maint.om/package.mo)
Running command: translateModel(PNlib.Examples.DisTest.PrioTest,tolerance=1e-06,outputFormat="mat",numberOfIntervals=5000,variableFilter="P1.t|P2.t|P3.t|P4.t|P5.t|T1.active|T1.fire|T2.active|T2.fire|T3.active|T3.fire|T4.active|T4.fire|T5.active|T5.fire|time",fileNamePrefix="PNlib_master_PNlib.Examples.DisTest.PrioTest")
translateModel(PNlib.Examples.DisTest.PrioTest,tolerance=1e-06,outputFormat="mat",numberOfIntervals=5000,variableFilter="P1.t|P2.t|P3.t|P4.t|P5.t|T1.active|T1.fire|T2.active|T2.fire|T3.active|T3.fire|T4.active|T4.fire|T5.active|T5.fire|time",fileNamePrefix="PNlib_master_PNlib.Examples.DisTest.PrioTest")
Notification: Performance of loadFile(/home/runner/.openmodelica/libraries/ModelicaServices 4.0.0+maint.om/package.mo): time 0.0009874/0.0009875, allocations: 100.9 kB / 15.6 MB, free: 5.273 MB / 13.93 MB
Notification: Performance of loadFile(/home/runner/.openmodelica/libraries/Complex 4.0.0+maint.om/package.mo): time 0.001017/0.001017, allocations: 175.8 kB / 16.51 MB, free: 4.668 MB / 13.93 MB
Notification: Performance of loadFile(/home/runner/.openmodelica/libraries/Modelica 4.0.0+maint.om/package.mo): time 1.64/1.64, allocations: 222.1 MB / 239.4 MB, free: 11.11 MB / 202.7 MB
Notification: Performance of loadFile(/home/runner/work/PNlib/PNlib/PNlib/package.mo): time 0.09347/0.09347, allocations: 16.58 MB / 306.2 MB, free: 10.58 MB / 250.7 MB
Notification: Performance of FrontEnd - loaded program: time 0.0005077/0.0005078, allocations: 12.27 kB / 370.6 MB, free: 44.89 MB / 298.7 MB
Notification: Performance of FrontEnd - Absyn->SCode: time 0.07706/0.07758, allocations: 53.47 MB / 424.1 MB, free: 5.941 MB / 298.7 MB
Notification: Performance of NFInst.instantiate(PNlib.Examples.DisTest.PrioTest): time 0.005402/0.08302, allocations: 5.706 MB / 429.8 MB, free: 220 kB / 298.7 MB
Notification: Performance of NFInst.instExpressions: time 0.008814/0.09186, allocations: 4.917 MB / 434.7 MB, free: 11.29 MB / 314.7 MB
Notification: Performance of NFInst.updateImplicitVariability: time 0.0008284/0.09271, allocations: 31.88 kB / 434.7 MB, free: 11.26 MB / 314.7 MB
Notification: Performance of NFTyping.typeComponents: time 0.0009132/0.09366, allocations: 0.5385 MB / 435.3 MB, free: 10.72 MB / 314.7 MB
Notification: Performance of NFTyping.typeBindings: time 0.001368/0.09504, allocations: 0.5502 MB / 435.8 MB, free: 10.16 MB / 314.7 MB
Notification: Performance of NFTyping.typeClassSections: time 0.003912/0.09896, allocations: 2.601 MB / 438.4 MB, free: 7.562 MB / 314.7 MB
Notification: Performance of NFFlatten.flatten: time 0.005567/0.1045, allocations: 7.337 MB / 445.7 MB, free: 220 kB / 314.7 MB
Notification: Performance of NFFlatten.resolveConnections: time 0.001794/0.1064, allocations: 1.13 MB / 446.9 MB, free: 15.03 MB / 330.7 MB
Notification: Performance of NFEvalConstants.evaluate: time 0.00215/0.1085, allocations: 2.766 MB / 449.6 MB, free: 12.25 MB / 330.7 MB
Notification: Performance of NFSimplifyModel.simplify: time 0.001727/0.1103, allocations: 1.913 MB / 451.6 MB, free: 10.33 MB / 330.7 MB
Notification: Performance of NFPackage.collectConstants: time 0.0006077/0.1109, allocations: 0.4922 MB / 452 MB, free: 9.84 MB / 330.7 MB
Notification: Performance of NFFlatten.collectFunctions: time 0.001658/0.1126, allocations: 1.144 MB / 453.2 MB, free: 8.695 MB / 330.7 MB
Notification: Performance of NFScalarize.scalarize: time 0.0006157/0.1132, allocations: 0.8829 MB / 454.1 MB, free: 7.812 MB / 330.7 MB
Notification: Performance of NFVerifyModel.verify: time 0.001821/0.115, allocations: 2.225 MB / 456.3 MB, free: 5.578 MB / 330.7 MB
Notification: Performance of NFConvertDAE.convert: time 0.004527/0.1196, allocations: 5.392 MB / 461.7 MB, free: 176 kB / 330.7 MB
Notification: Performance of FrontEnd - DAE generated: time 4.528e-06/0.1196, allocations: 4 kB / 461.7 MB, free: 172 kB / 330.7 MB
Notification: Performance of FrontEnd: time 1.673e-06/0.1196, allocations: 0 / 461.7 MB, free: 172 kB / 330.7 MB
Notification: Performance of Transformations before backend: time 2.849e-05/0.1196, allocations: 0 / 461.7 MB, free: 172 kB / 330.7 MB
Notification: Model statistics after passing the front-end and creating the data structures used by the back-end:
 * Number of equations: 1090
 * Number of variables: 1090
Notification: Performance of Generate backend data structure: time 0.006798/0.1264, allocations: 5.631 MB / 467.3 MB, free: 10.14 MB / 346.7 MB
Notification: Performance of prepare preOptimizeDAE: time 3.564e-05/0.1265, allocations: 8.031 kB / 467.3 MB, free: 10.13 MB / 346.7 MB
Notification: Performance of preOpt normalInlineFunction (simulation): time 0.001618/0.1281, allocations: 0.5227 MB / 467.9 MB, free: 9.602 MB / 346.7 MB
Notification: Performance of preOpt evaluateParameters (simulation): time 0.002603/0.1307, allocations: 1.666 MB / 469.5 MB, free: 7.887 MB / 346.7 MB
Notification: Performance of preOpt simplifyIfEquations (simulation): time 0.0005426/0.1313, allocations: 0.5761 MB / 470.1 MB, free: 7.254 MB / 346.7 MB
Notification: Performance of preOpt expandDerOperator (simulation): time 0.000653/0.1319, allocations: 475.9 kB / 470.6 MB, free: 6.789 MB / 346.7 MB
Notification: Performance of preOpt clockPartitioning (simulation): time 0.0131/0.1451, allocations: 8.41 MB / 479 MB, free: 13.96 MB / 362.7 MB
Notification: Performance of preOpt findStateOrder (simulation): time 7.964e-05/0.1452, allocations: 19.81 kB / 479 MB, free: 13.95 MB / 362.7 MB
Notification: Performance of preOpt replaceEdgeChange (simulation): time 0.0005188/0.1457, allocations: 231.8 kB / 479.2 MB, free: 13.72 MB / 362.7 MB
Notification: Performance of preOpt inlineArrayEqn (simulation): time 0.0005725/0.1463, allocations: 401.3 kB / 479.6 MB, free: 13.32 MB / 362.7 MB
Notification: Performance of preOpt removeEqualRHS (simulation): time 0.01018/0.1565, allocations: 5.92 MB / 485.5 MB, free: 7.391 MB / 362.7 MB
Notification: Performance of preOpt removeSimpleEquations (simulation): time 0.02239/0.1789, allocations: 18.79 MB / 0.4925 GB, free: 4.094 MB / 378.7 MB
Notification: Performance of preOpt comSubExp (simulation): time 0.2202/0.3991, allocations: 9.516 MB / 0.5018 GB, free: 73.34 MB / 378.7 MB
Notification: Performance of preOpt resolveLoops (simulation): time 0.008779/0.4079, allocations: 9.04 MB / 0.5106 GB, free: 68.45 MB / 378.7 MB
Notification: Performance of preOpt evalFunc (simulation): time 0.0001614/0.4081, allocations: 106.2 kB / 0.5107 GB, free: 68.36 MB / 378.7 MB
Notification: Performance of preOpt encapsulateWhenConditions (simulation): time 0.008179/0.4163, allocations: 5.208 MB / 0.5158 GB, free: 66.3 MB / 378.7 MB
Notification: Performance of pre-optimization done (n=437): time 6.502e-06/0.4163, allocations: 0 / 0.5158 GB, free: 66.3 MB / 378.7 MB
Notification: Performance of matching and sorting (n=437): time 0.01994/0.4363, allocations: 14.88 MB / 0.5303 GB, free: 54.9 MB / 378.7 MB
Notification: Performance of inlineWhenForInitialization (initialization): time 0.0009415/0.4373, allocations: 2.784 MB / 0.5331 GB, free: 51.63 MB / 378.7 MB
Notification: Performance of selectInitializationVariablesDAE (initialization): time 0.001972/0.4392, allocations: 1.885 MB / 0.5349 GB, free: 49.83 MB / 378.7 MB
Notification: Performance of collectPreVariables (initialization): time 0.0003736/0.4396, allocations: 249.6 kB / 0.5351 GB, free: 49.58 MB / 378.7 MB
Notification: Performance of collectInitialEqns (initialization): time 0.0007408/0.4404, allocations: 1.267 MB / 0.5364 GB, free: 48.36 MB / 378.7 MB
Notification: Performance of collectInitialBindings (initialization): time 0.0007147/0.4411, allocations: 1.08 MB / 0.5374 GB, free: 47.32 MB / 378.7 MB
Notification: Performance of simplifyInitialFunctions (initialization): time 0.001444/0.4426, allocations: 1.301 MB / 0.5387 GB, free: 46 MB / 378.7 MB
Notification: Performance of setup shared object (initialization): time 3.737e-05/0.4426, allocations: 301.1 kB / 0.539 GB, free: 45.71 MB / 378.7 MB
Notification: Performance of preBalanceInitialSystem (initialization): time 0.003472/0.4461, allocations: 2.433 MB / 0.5414 GB, free: 43.27 MB / 378.7 MB
Notification: Performance of partitionIndependentBlocks (initialization): time 0.004257/0.4503, allocations: 4.601 MB / 0.5459 GB, free: 37.77 MB / 378.7 MB
Notification: Performance of analyzeInitialSystem (initialization): time 0.01288/0.4632, allocations: 13.76 MB / 0.5593 GB, free: 22.27 MB / 378.7 MB
Notification: Performance of solveInitialSystemEqSystem (initialization): time 6.526e-05/0.4633, allocations: 20 kB / 0.5593 GB, free: 22.25 MB / 378.7 MB
Notification: Performance of matching and sorting (n=858) (initialization): time 0.0124/0.4757, allocations: 9.823 MB / 0.5689 GB, free: 12.08 MB / 378.7 MB
Notification: Performance of prepare postOptimizeDAE: time 0.0005842/0.4763, allocations: 1.62 MB / 0.5705 GB, free: 10.15 MB / 378.7 MB
Notification: Performance of postOpt simplifyComplexFunction (initialization): time 6.631e-05/0.4764, allocations: 64 kB / 0.5706 GB, free: 10.09 MB / 378.7 MB
Notification: Performance of postOpt tearingSystem (initialization): time 9.258e-05/0.4765, allocations: 100 kB / 0.5706 GB, free: 9.992 MB / 378.7 MB
Notification: Performance of postOpt solveSimpleEquations (initialization): time 0.002371/0.4789, allocations: 0.7292 MB / 0.5714 GB, free: 9.262 MB / 378.7 MB
Notification: Performance of postOpt calculateStrongComponentJacobians (initialization): time 9.481e-05/0.479, allocations: 139.5 kB / 0.5715 GB, free: 9.125 MB / 378.7 MB
Notification: Performance of postOpt simplifyAllExpressions (initialization): time 0.003077/0.4821, allocations: 0.7202 MB / 0.5722 GB, free: 8.398 MB / 378.7 MB
Notification: Performance of postOpt collapseArrayExpressions (initialization): time 0.0004427/0.4825, allocations: 329.5 kB / 0.5725 GB, free: 8.082 MB / 378.7 MB
Warning: Assuming fixed start value for the following 125 variables:
         P5.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P5.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P5.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P5.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P5.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P5.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P5.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P5.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P5.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P5.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P4.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P4.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P4.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P4.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P4.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P4.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P4.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P4.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P4.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P4.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P3.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P3.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P3.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P3.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P3.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P3.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P3.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P3.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P3.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P3.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P2.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P2.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P2.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P2.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P2.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P2.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P2.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P2.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P2.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P2.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P1.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P1.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P1.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P1.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P1.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P1.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P1.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P1.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P1.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P1.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P1.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P1.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P1.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P1.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P1.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P1.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P1.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P1.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P1.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P1.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P5.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P5.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P4.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P4.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P3.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P3.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P2.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P2.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         T5.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T5.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         T4.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T4.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         T3.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T3.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         T2.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T2.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         T1.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T1.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         P1.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P1.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P5.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P5.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P5.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P5.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P5.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P5.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P5.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P5.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P5.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P5.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P4.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P4.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P4.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P4.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P4.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P4.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P4.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P4.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P4.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P4.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P3.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P3.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P3.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P3.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P3.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P3.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P3.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P3.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P3.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P3.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P2.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P2.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P2.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P2.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P2.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P2.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P2.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P2.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P2.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P2.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         T5.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T4.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T3.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T2.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T1.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
Notification: Model statistics after passing the back-end for initialization:
 * Number of independent subsystems: 294
 * Number of states: 0 ()
 * Number of discrete variables: 711 ($PRE.P5.enableIn.valid,P5.enableIn.valid,$PRE.P5.enableIn.benefitLimit,P5.enableIn.benefitLimit,$PRE.P5.enableIn.benefitMax,P5.enableIn.benefitMax,$PRE.P5.enableIn.posTE,P5.enableIn.posTE,$PRE.P5.enableIn.k,P5.enableIn.k,$PRE.P5.enableIn.endWhile,P5.enableIn.endWhile,P5.enableIn.randNum,$PRE.P5.enableIn.randNum,P5.enableIn.state128[4],$PRE.P5.enableIn.state128[4],P5.enableIn.state128[3],$PRE.P5.enableIn.state128[3],P5.enableIn.state128[2],$PRE.P5.enableIn.state128[2],P5.enableIn.state128[1],$PRE.P5.enableIn.state128[1],P5.enableIn.cumEnablingProb[1],$PRE.P5.enableIn.cumEnablingProb[1],$PRE.P5.enableIn.sumEnablingProbTAin,P5.enableIn.sumEnablingProbTAin,$PRE.P5.enableIn.nTAin,P5.enableIn.nTAin,$PRE.P5.enableIn.nremTAin,P5.enableIn.nremTAin,P5.enableIn.remTAin[1],$PRE.P5.enableIn.remTAin[1],$PRE.P5.enableIn.Index,P5.enableIn.Index,$PRE.P4.enableIn.valid,P4.enableIn.valid,$PRE.P4.enableIn.benefitLimit,P4.enableIn.benefitLimit,$PRE.P4.enableIn.benefitMax,P4.enableIn.benefitMax,$PRE.P4.enableIn.posTE,P4.enableIn.posTE,$PRE.P4.enableIn.k,P4.enableIn.k,$PRE.P4.enableIn.endWhile,P4.enableIn.endWhile,P4.enableIn.randNum,$PRE.P4.enableIn.randNum,P4.enableIn.state128[4],$PRE.P4.enableIn.state128[4],P4.enableIn.state128[3],$PRE.P4.enableIn.state128[3],P4.enableIn.state128[2],$PRE.P4.enableIn.state128[2],P4.enableIn.state128[1],$PRE.P4.enableIn.state128[1],P4.enableIn.cumEnablingProb[1],$PRE.P4.enableIn.cumEnablingProb[1],$PRE.P4.enableIn.sumEnablingProbTAin,P4.enableIn.sumEnablingProbTAin,$PRE.P4.enableIn.nTAin,P4.enableIn.nTAin,$PRE.P4.enableIn.nremTAin,P4.enableIn.nremTAin,P4.enableIn.remTAin[1],$PRE.P4.enableIn.remTAin[1],$PRE.P4.enableIn.Index,P4.enableIn.Index,$PRE.P3.enableIn.valid,P3.enableIn.valid,$PRE.P3.enableIn.benefitLimit,P3.enableIn.benefitLimit,$PRE.P3.enableIn.benefitMax,P3.enableIn.benefitMax,$PRE.P3.enableIn.posTE,P3.enableIn.posTE,$PRE.P3.enableIn.k,P3.enableIn.k,$PRE.P3.enableIn.endWhile,P3.enableIn.endWhile,P3.enableIn.randNum,$PRE.P3.enableIn.randNum,P3.enableIn.state128[4],$PRE.P3.enableIn.state128[4],P3.enableIn.state128[3],$PRE.P3.enableIn.state128[3],P3.enableIn.state128[2],$PRE.P3.enableIn.state128[2],P3.enableIn.state128[1],$PRE.P3.enableIn.state128[1],P3.enableIn.cumEnablingProb[1],$PRE.P3.enableIn.cumEnablingProb[1],$PRE.P3.enableIn.sumEnablingProbTAin,P3.enableIn.sumEnablingProbTAin,$PRE.P3.enableIn.nTAin,P3.enableIn.nTAin,$PRE.P3.enableIn.nremTAin,P3.enableIn.nremTAin,P3.enableIn.remTAin[1],$PRE.P3.enableIn.remTAin[1],$PRE.P3.enableIn.Index,P3.enableIn.Index,$PRE.P2.enableIn.valid,P2.enableIn.valid,$PRE.P2.enableIn.benefitLimit,P2.enableIn.benefitLimit,$PRE.P2.enableIn.benefitMax,P2.enableIn.benefitMax,$PRE.P2.enableIn.posTE,P2.enableIn.posTE,$PRE.P2.enableIn.k,P2.enableIn.k,$PRE.P2.enableIn.endWhile,P2.enableIn.endWhile,P2.enableIn.randNum,$PRE.P2.enableIn.randNum,P2.enableIn.state128[4],$PRE.P2.enableIn.state128[4],P2.enableIn.state128[3],$PRE.P2.enableIn.state128[3],P2.enableIn.state128[2],$PRE.P2.enableIn.state128[2],P2.enableIn.state128[1],$PRE.P2.enableIn.state128[1],P2.enableIn.cumEnablingProb[1],$PRE.P2.enableIn.cumEnablingProb[1],$PRE.P2.enableIn.sumEnablingProbTAin,P2.enableIn.sumEnablingProbTAin,$PRE.P2.enableIn.nTAin,P2.enableIn.nTAin,$PRE.P2.enableIn.nremTAin,P2.enableIn.nremTAin,P2.enableIn.remTAin[1],$PRE.P2.enableIn.remTAin[1],$PRE.P2.enableIn.Index,P2.enableIn.Index,$PRE.P1.enableIn.valid,P1.enableIn.valid,$PRE.P1.enableIn.benefitLimit,P1.enableIn.benefitLimit,$PRE.P1.enableIn.benefitMax,P1.enableIn.benefitMax,$PRE.P1.enableIn.posTE,P1.enableIn.posTE,$PRE.P1.enableIn.k,P1.enableIn.k,$PRE.P1.enableIn.endWhile,P1.enableIn.endWhile,P1.enableIn.randNum,$PRE.P1.enableIn.randNum,P1.enableIn.state128[4],$PRE.P1.enableIn.state128[4],P1.enableIn.state128[3],$PRE.P1.enableIn.state128[3],P1.enableIn.state128[2],$PRE.P1.enableIn.state128[2],P1.enableIn.state128[1],$PRE.P1.enableIn.state128[1],P1.enableIn.cumEnablingProb[1],$PRE.P1.enableIn.cumEnablingProb[1],$PRE.P1.enableIn.sumEnablingProbTAin,P1.enableIn.sumEnablingProbTAin,$PRE.P1.enableIn.nTAin,P1.enableIn.nTAin,$PRE.P1.enableIn.nremTAin,P1.enableIn.nremTAin,P1.enableIn.remTAin[1],$PRE.P1.enableIn.remTAin[1],$PRE.P1.enableIn.Index,P1.enableIn.Index,$PRE.P1.enableOut.valid,P1.enableOut.valid,$PRE.P1.enableOut.benefitLimit,P1.enableOut.benefitLimit,$PRE.P1.enableOut.benefitMax,P1.enableOut.benefitMax,$PRE.P1.enableOut.posTE,P1.enableOut.posTE,$PRE.P1.enableOut.k,P1.enableOut.k,$PRE.P1.enableOut.endWhile,P1.enableOut.endWhile,P1.enableOut.randNum,$PRE.P1.enableOut.randNum,P1.enableOut.state128[4],$PRE.P1.enableOut.state128[4],P1.enableOut.state128[3],$PRE.P1.enableOut.state128[3],P1.enableOut.state128[2],$PRE.P1.enableOut.state128[2],P1.enableOut.state128[1],$PRE.P1.enableOut.state128[1],P1.enableOut.cumEnablingProb[4],$PRE.P1.enableOut.cumEnablingProb[4],P1.enableOut.cumEnablingProb[3],$PRE.P1.enableOut.cumEnablingProb[3],P1.enableOut.cumEnablingProb[2],$PRE.P1.enableOut.cumEnablingProb[2],P1.enableOut.cumEnablingProb[1],$PRE.P1.enableOut.cumEnablingProb[1],$PRE.P1.enableOut.sumEnablingProbTAout,P1.enableOut.sumEnablingProbTAout,$PRE.P1.enableOut.nTAout,P1.enableOut.nTAout,$PRE.P1.enableOut.nremTAout,P1.enableOut.nremTAout,P1.enableOut.remTAout[4],$PRE.P1.enableOut.remTAout[4],P1.enableOut.remTAout[3],$PRE.P1.enableOut.remTAout[3],P1.enableOut.remTAout[2],$PRE.P1.enableOut.remTAout[2],P1.enableOut.remTAout[1],$PRE.P1.enableOut.remTAout[1],$PRE.P1.enableOut.Index,P1.enableOut.Index,$PRE.P1.reStart,$whenCondition35,$PRE.P2.reStart,$whenCondition22,$PRE.P3.reStart,$whenCondition19,$PRE.P4.reStart,$whenCondition16,$PRE.P5.reStart,$whenCondition13,$PRE.P1.tokeninout,P1.outTransition[4].tokenInOut,P1.outTransition[3].tokenInOut,P1.outTransition[2].tokenInOut,P1.outTransition[1].tokenInOut,$PRE.P5.firingSumOut.firingSum,$PRE.P5.firingSumIn.firingSum,P5.tokeninout,$whenCondition11,$whenCondition12,$PRE.P4.firingSumOut.firingSum,$PRE.P4.firingSumIn.firingSum,P4.tokeninout,$whenCondition14,$whenCondition15,$PRE.P3.firingSumOut.firingSum,$PRE.P3.firingSumIn.firingSum,P3.tokeninout,$whenCondition17,$whenCondition18,$PRE.P2.firingSumOut.firingSum,$PRE.P2.firingSumIn.firingSum,P2.tokeninout,$whenCondition20,$whenCondition21,$PRE.T5.ani,$PRE.T5.fireTime,T5.ani,T5.fireTime,$PRE.T4.ani,$PRE.T4.fireTime,T4.ani,T4.fireTime,$PRE.T3.ani,$PRE.T3.fireTime,T3.ani,T3.fireTime,$PRE.T2.ani,$PRE.T2.fireTime,T2.ani,T2.fireTime,$PRE.T1.ani,$PRE.T1.fireTime,T1.ani,T1.fireTime,$PRE.P1.firingSumOut.firingSum,$PRE.P1.firingSumIn.firingSum,P1.tokeninout,$whenCondition33,$whenCondition34,P5.firingSumOut.firingSum,P4.firingSumOut.firingSum,P3.firingSumOut.firingSum,P2.firingSumOut.firingSum,$PRE.P5.enableOut.benefitLimit,P5.enableOut.benefitLimit,$PRE.P5.enableOut.valid,P5.enableOut.valid,$PRE.P5.enableOut.benefitMax,P5.enableOut.benefitMax,$PRE.P5.enableOut.Index,P5.enableOut.Index,$PRE.P5.enableOut.endWhile,P5.enableOut.endWhile,$PRE.P5.enableOut.sumEnablingProbTAout,P5.enableOut.sumEnablingProbTAout,P5.enableOut.randNum,$PRE.P5.enableOut.randNum,P5.enableOut.state128[4],$PRE.P5.enableOut.state128[4],P5.enableOut.state128[3],$PRE.P5.enableOut.state128[3],P5.enableOut.state128[2],$PRE.P5.enableOut.state128[2],P5.enableOut.state128[1],$PRE.P5.enableOut.state128[1],$PRE.P5.enableOut.posTE,P5.enableOut.posTE,$PRE.P5.enableOut.k,P5.enableOut.k,$PRE.P5.enableOut.nTAout,P5.enableOut.nTAout,$PRE.P5.enableOut.nremTAout,P5.enableOut.nremTAout,P5.enableOut.arcWeightSum,$PRE.P5.enableOut.arcWeightSum,P5.delayPassedOut.numtrue,P5.delayPassedOut.anytrue,P5.activeConOut.anychange,$whenCondition4,$PRE.P4.enableOut.benefitLimit,P4.enableOut.benefitLimit,$PRE.P4.enableOut.valid,P4.enableOut.valid,$PRE.P4.enableOut.benefitMax,P4.enableOut.benefitMax,$PRE.P4.enableOut.Index,P4.enableOut.Index,$PRE.P4.enableOut.endWhile,P4.enableOut.endWhile,$PRE.P4.enableOut.sumEnablingProbTAout,P4.enableOut.sumEnablingProbTAout,P4.enableOut.randNum,$PRE.P4.enableOut.randNum,P4.enableOut.state128[4],$PRE.P4.enableOut.state128[4],P4.enableOut.state128[3],$PRE.P4.enableOut.state128[3],P4.enableOut.state128[2],$PRE.P4.enableOut.state128[2],P4.enableOut.state128[1],$PRE.P4.enableOut.state128[1],$PRE.P4.enableOut.posTE,P4.enableOut.posTE,$PRE.P4.enableOut.k,P4.enableOut.k,$PRE.P4.enableOut.nTAout,P4.enableOut.nTAout,$PRE.P4.enableOut.nremTAout,P4.enableOut.nremTAout,P4.enableOut.arcWeightSum,$PRE.P4.enableOut.arcWeightSum,P4.delayPassedOut.numtrue,P4.delayPassedOut.anytrue,P4.activeConOut.anychange,$whenCondition3,$PRE.P3.enableOut.benefitLimit,P3.enableOut.benefitLimit,$PRE.P3.enableOut.valid,P3.enableOut.valid,$PRE.P3.enableOut.benefitMax,P3.enableOut.benefitMax,$PRE.P3.enableOut.Index,P3.enableOut.Index,$PRE.P3.enableOut.endWhile,P3.enableOut.endWhile,$PRE.P3.enableOut.sumEnablingProbTAout,P3.enableOut.sumEnablingProbTAout,P3.enableOut.randNum,$PRE.P3.enableOut.randNum,P3.enableOut.state128[4],$PRE.P3.enableOut.state128[4],P3.enableOut.state128[3],$PRE.P3.enableOut.state128[3],P3.enableOut.state128[2],$PRE.P3.enableOut.state128[2],P3.enableOut.state128[1],$PRE.P3.enableOut.state128[1],$PRE.P3.enableOut.posTE,P3.enableOut.posTE,$PRE.P3.enableOut.k,P3.enableOut.k,$PRE.P3.enableOut.nTAout,P3.enableOut.nTAout,$PRE.P3.enableOut.nremTAout,P3.enableOut.nremTAout,P3.enableOut.arcWeightSum,$PRE.P3.enableOut.arcWeightSum,P3.delayPassedOut.numtrue,P3.delayPassedOut.anytrue,P3.activeConOut.anychange,$whenCondition2,$PRE.P2.enableOut.benefitLimit,P2.enableOut.benefitLimit,$PRE.P2.enableOut.valid,P2.enableOut.valid,$PRE.P2.enableOut.benefitMax,P2.enableOut.benefitMax,$PRE.P2.enableOut.Index,P2.enableOut.Index,$PRE.P2.enableOut.endWhile,P2.enableOut.endWhile,$PRE.P2.enableOut.sumEnablingProbTAout,P2.enableOut.sumEnablingProbTAout,P2.enableOut.randNum,$PRE.P2.enableOut.randNum,P2.enableOut.state128[4],$PRE.P2.enableOut.state128[4],P2.enableOut.state128[3],$PRE.P2.enableOut.state128[3],P2.enableOut.state128[2],$PRE.P2.enableOut.state128[2],P2.enableOut.state128[1],$PRE.P2.enableOut.state128[1],$PRE.P2.enableOut.posTE,P2.enableOut.posTE,$PRE.P2.enableOut.k,P2.enableOut.k,$PRE.P2.enableOut.nTAout,P2.enableOut.nTAout,$PRE.P2.enableOut.nremTAout,P2.enableOut.nremTAout,P2.enableOut.arcWeightSum,$PRE.P2.enableOut.arcWeightSum,P2.delayPassedOut.numtrue,P2.delayPassedOut.anytrue,P2.activeConOut.anychange,$whenCondition1,P5.inTransition[1].disPlace,T5.outPlaces[1].disTransition,P5.reStart,P4.inTransition[1].disPlace,T4.outPlaces[1].disTransition,P4.reStart,P3.inTransition[1].disPlace,T3.outPlaces[1].disTransition,P3.reStart,P2.inTransition[1].disPlace,T2.outPlaces[1].disTransition,P2.reStart,T5.firingCon,T5.inPlaces[1].disTransition,P1.outTransition[4].normalArc,P1.outTransition[4].testValueint,P1.outTransition[4].arcType,P1.outTransition[4].disPlace,T4.firingCon,T4.inPlaces[1].disTransition,P1.outTransition[3].normalArc,P1.outTransition[3].testValueint,P1.outTransition[3].arcType,P1.outTransition[3].disPlace,T3.firingCon,T3.inPlaces[1].disTransition,P1.outTransition[2].normalArc,P1.outTransition[2].testValueint,P1.outTransition[2].arcType,P1.outTransition[2].disPlace,T2.firingCon,T2.inPlaces[1].disTransition,P1.outTransition[1].normalArc,P1.outTransition[1].testValueint,P1.outTransition[1].arcType,P1.outTransition[1].disPlace,T1.firingCon,T1.outPlaces[1].disTransition,P1.inTransition[1].disPlace,P1.reStart,P5.enableIn.disTransition[1],P4.enableIn.disTransition[1],P3.enableIn.disTransition[1],P2.enableIn.disTransition[1],P1.enableIn.disTransition[1],$PRE.P5.enableIn.arcWeightSum,$PRE.P5.enableIn.TEin[1],$PRE.P4.enableIn.arcWeightSum,$PRE.P4.enableIn.TEin[1],$PRE.P3.enableIn.arcWeightSum,$PRE.P3.enableIn.TEin[1],$PRE.P2.enableIn.arcWeightSum,$PRE.P2.enableIn.TEin[1],$PRE.T5.firingTime,$PRE.T4.firingTime,$PRE.T3.firingTime,$PRE.T2.firingTime,$PRE.T1.firingTime,$PRE.P1.enableIn.arcWeightSum,$PRE.P1.enableIn.TEin[1],$PRE.P1.enableOut.arcWeightSum,$PRE.P1.enableOut.TEout[4],$PRE.P1.enableOut.TEout[3],$PRE.P1.enableOut.TEout[2],$PRE.P1.enableOut.TEout[1],T1.enabledByInPlaces,P1.enableIn.arcWeight[1],P1.enableOut.arcWeight[1],T2.activation.arcWeightIntOut[1],P1.enableOut.arcWeight[2],T3.activation.arcWeightIntOut[1],P1.enableOut.arcWeight[3],T4.activation.arcWeightIntOut[1],P1.enableOut.arcWeight[4],T5.activation.arcWeightIntOut[1],T5.activation.disPlaceOut[1],T4.activation.disPlaceOut[1],T3.activation.disPlaceOut[1],T2.activation.disPlaceOut[1],P1.enableOut.disTransition[4],T5.activation.normalArc[1],T5.activation.testValueInt[1],T5.activation.arcType[1],T5.activation.disPlaceIn[1],P1.enableOut.disTransition[3],T4.activation.normalArc[1],T4.activation.testValueInt[1],T4.activation.arcType[1],T4.activation.disPlaceIn[1],P1.enableOut.disTransition[2],T3.activation.normalArc[1],T3.activation.testValueInt[1],T3.activation.arcType[1],T3.activation.disPlaceIn[1],P1.enableOut.disTransition[1],T2.activation.normalArc[1],T2.activation.testValueInt[1],T2.activation.arcType[1],T2.activation.disPlaceIn[1],T1.activation.disPlaceOut[1],P5.enableIn.arcWeightSum,P5.enableIn.TEin[1],P5.enableIn.TEin_[1],P5.enableIn.active[1],P5.enableIn.TAein[1],P5.enableIn.arcWeight[1],P5.firingSumIn.firingSum,P5.firingSumIn.arcWeight[1],P5.firingSumIn.fire[1],P5.delayPassedIn.numtrue,P5.delayPassedIn.anytrue,P5.delayPassedIn.vec[1],P5.inTransition[1].enabledByInPlaces,P5.t,$PRE.P5.t,P4.enableIn.arcWeightSum,P4.enableIn.TEin[1],P4.enableIn.TEin_[1],P4.enableIn.active[1],P4.enableIn.TAein[1],P4.enableIn.arcWeight[1],P4.firingSumIn.firingSum,P4.firingSumIn.arcWeight[1],P4.firingSumIn.fire[1],P4.delayPassedIn.numtrue,P4.delayPassedIn.anytrue,P4.delayPassedIn.vec[1],P4.inTransition[1].enabledByInPlaces,P4.t,$PRE.P4.t,P3.enableIn.arcWeightSum,P3.enableIn.TEin[1],P3.enableIn.TEin_[1],P3.enableIn.active[1],P3.enableIn.TAein[1],P3.enableIn.arcWeight[1],P3.firingSumIn.firingSum,P3.firingSumIn.arcWeight[1],P3.firingSumIn.fire[1],P3.delayPassedIn.numtrue,P3.delayPassedIn.anytrue,P3.delayPassedIn.vec[1],P3.inTransition[1].enabledByInPlaces,P3.t,$PRE.P3.t,P2.enableIn.arcWeightSum,P2.enableIn.TEin[1],P2.enableIn.TEin_[1],P2.enableIn.active[1],P2.enableIn.TAein[1],P2.enableIn.arcWeight[1],P2.firingSumIn.firingSum,P2.firingSumIn.arcWeight[1],P2.firingSumIn.fire[1],P2.delayPassedIn.numtrue,P2.delayPassedIn.anytrue,P2.delayPassedIn.vec[1],P2.inTransition[1].enabledByInPlaces,P2.t,$PRE.P2.t,T5.activation.active,T5.activation.maxTokensInt[1],T5.activation.minTokensInt[1],T5.activation.arcWeightIntIn[1],T5.activation.tIntOut[1],T5.activation.tIntIn[1],T5.delayPassed,$PRE.T5.delayPassed,T5.firingTime,T5.active,T4.activation.active,T4.activation.maxTokensInt[1],T4.activation.minTokensInt[1],T4.activation.arcWeightIntIn[1],T4.activation.tIntOut[1],T4.activation.tIntIn[1],T4.delayPassed,$PRE.T4.delayPassed,T4.firingTime,T4.active,T3.activation.active,T3.activation.maxTokensInt[1],T3.activation.minTokensInt[1],T3.activation.arcWeightIntIn[1],T3.activation.tIntOut[1],T3.activation.tIntIn[1],T3.delayPassed,$PRE.T3.delayPassed,T3.firingTime,T3.active,T2.activation.active,T2.activation.maxTokensInt[1],T2.activation.minTokensInt[1],T2.activation.arcWeightIntIn[1],T2.activation.tIntOut[1],T2.activation.tIntIn[1],T2.delayPassed,$PRE.T2.delayPassed,T2.firingTime,T2.active,T1.activation.active,T1.activation.maxTokensInt[1],T1.activation.arcWeightIntOut[1],T1.activation.tIntOut[1],T1.delayPassed,$PRE.T1.delayPassed,T1.firingTime,T1.active,P1.enableIn.arcWeightSum,P1.enableIn.TEin[1],P1.enableIn.TEin_[1],P1.enableIn.active[1],P1.enableIn.TAein[1],P1.enableOut.arcWeightSum,P1.enableOut.TEout[4],P1.enableOut.TEout[3],P1.enableOut.TEout[2],P1.enableOut.TEout[1],P1.enableOut.TEout_[4],P1.enableOut.TEout_[3],P1.enableOut.TEout_[2],P1.enableOut.TEout_[1],P1.enableOut.TAout[4],P1.enableOut.TAout[3],P1.enableOut.TAout[2],P1.enableOut.TAout[1],P1.firingSumOut.firingSum,P1.firingSumOut.arcWeight[4],P1.firingSumOut.arcWeight[3],P1.firingSumOut.arcWeight[2],P1.firingSumOut.arcWeight[1],P1.firingSumOut.fire[4],P1.firingSumOut.fire[3],P1.firingSumOut.fire[2],P1.firingSumOut.fire[1],P1.firingSumIn.firingSum,P1.firingSumIn.arcWeight[1],P1.firingSumIn.fire[1],P1.delayPassedIn.numtrue,P1.delayPassedIn.anytrue,P1.delayPassedIn.vec[1],P1.delayPassedOut.numtrue,P1.delayPassedOut.anytrue,P1.delayPassedOut.vec[4],P1.delayPassedOut.vec[3],P1.delayPassedOut.vec[2],P1.delayPassedOut.vec[1],P1.activeConOut.anychange,P1.activeConOut.vec[4],P1.activeConOut.vec[3],P1.activeConOut.vec[2],P1.activeConOut.vec[1],P1.activeOut[4],$PRE.P1.activeOut[4],P1.activeOut[3],$PRE.P1.activeOut[3],P1.activeOut[2],$PRE.P1.activeOut[2],P1.activeOut[1],$PRE.P1.activeOut[1],P1.t,$PRE.P1.t,$whenCondition10,$whenCondition9,$whenCondition8,$whenCondition7,$whenCondition6,$whenCondition5,$whenCondition23,$whenCondition24,$whenCondition25,$whenCondition26,$whenCondition27,$whenCondition28,$whenCondition29,$whenCondition30,$whenCondition31,$whenCondition32,P5.inTransition[1].emptied,P4.inTransition[1].emptied,P3.inTransition[1].emptied,P2.inTransition[1].emptied,P1.outTransition[4].fed,P1.outTransition[3].fed,P1.outTransition[2].fed,P1.outTransition[1].fed,P1.inTransition[1].emptied)
 * Number of discrete states: 0 ()
 * Number of clocked states: 0 ()
 * Top-level inputs: 0
Notification: Strong component statistics for initialization (777):
 * Single equations (assignments): 726
 * Array equations: 1
 * Algorithm blocks: 50
 * Record equations: 0
 * When equations: 0
 * If-equations: 0
 * Equation systems (not torn): 0
 * Torn equation systems: 0
 * Mixed (continuous/discrete) equation systems: 0
Notification: Performance of prepare postOptimizeDAE: time 0.003882/0.4864, allocations: 3.704 MB / 0.5761 GB, free: 4.172 MB / 378.7 MB
Notification: Performance of postOpt lateInlineFunction (simulation): time 0.000742/0.4872, allocations: 404.7 kB / 0.5765 GB, free: 3.773 MB / 378.7 MB
Notification: Performance of postOpt wrapFunctionCalls (simulation): time 0.01688/0.5041, allocations: 11.36 MB / 0.5876 GB, free: 8.203 MB / 394.7 MB
Notification: Performance of postOpt inlineArrayEqn (simulation): time 3.816e-05/0.5041, allocations: 24 kB / 0.5876 GB, free: 8.18 MB / 394.7 MB
Notification: Performance of postOpt constantLinearSystem (simulation): time 1.072e-05/0.5041, allocations: 4 kB / 0.5876 GB, free: 8.176 MB / 394.7 MB
Notification: Performance of postOpt simplifysemiLinear (simulation): time 4.234e-05/0.5042, allocations: 11.95 kB / 0.5876 GB, free: 8.164 MB / 394.7 MB
Notification: Performance of postOpt removeSimpleEquations (simulation): time 0.02385/0.5281, allocations: 16.51 MB / 0.6038 GB, free: 7.457 MB / 410.7 MB
Notification: Performance of postOpt simplifyComplexFunction (simulation): time 1.27e-05/0.5281, allocations: 0 / 0.6038 GB, free: 7.457 MB / 410.7 MB
Notification: Performance of postOpt solveSimpleEquations (simulation): time 0.0009625/0.5291, allocations: 179.6 kB / 0.6039 GB, free: 7.281 MB / 410.7 MB
Notification: Performance of postOpt tearingSystem (simulation): time 1.211e-05/0.5291, allocations: 8 kB / 0.6039 GB, free: 7.273 MB / 410.7 MB
Notification: Performance of postOpt inputDerivativesUsed (simulation): time 0.0005248/0.5296, allocations: 221.5 kB / 0.6042 GB, free: 7.059 MB / 410.7 MB
Notification: Performance of postOpt calculateStrongComponentJacobians (simulation): time 1.369e-05/0.5297, allocations: 8 kB / 0.6042 GB, free: 7.051 MB / 410.7 MB
Notification: Performance of postOpt calculateStateSetsJacobians (simulation): time 2.284e-06/0.5297, allocations: 0 / 0.6042 GB, free: 7.051 MB / 410.7 MB
Notification: Performance of postOpt symbolicJacobian (simulation): time 0.01966/0.5493, allocations: 12.84 MB / 0.6167 GB, free: 9.926 MB / 426.7 MB
Notification: Performance of postOpt removeConstants (simulation): time 0.0003621/0.5497, allocations: 364.9 kB / 0.6171 GB, free: 9.547 MB / 426.7 MB
Notification: Performance of postOpt simplifyTimeIndepFuncCalls (simulation): time 0.001087/0.5508, allocations: 403.8 kB / 0.6174 GB, free: 9.152 MB / 426.7 MB
Notification: Performance of postOpt simplifyAllExpressions (simulation): time 0.002697/0.5535, allocations: 373.9 kB / 0.6178 GB, free: 8.789 MB / 426.7 MB
Notification: Performance of postOpt findZeroCrossings (simulation): time 0.002513/0.5561, allocations: 1.487 MB / 0.6192 GB, free: 7.301 MB / 426.7 MB
Notification: Performance of postOpt collapseArrayExpressions (simulation): time 0.000578/0.5566, allocations: 256.6 kB / 0.6195 GB, free: 7.055 MB / 426.7 MB
Notification: Performance of sorting global known variables: time 0.00132/0.558, allocations: 0.9961 MB / 0.6205 GB, free: 6.062 MB / 426.7 MB
Notification: Performance of sort global known variables: time 1.6e-07/0.558, allocations: 0 / 0.6205 GB, free: 6.062 MB / 426.7 MB
Notification: Performance of remove unused functions: time 0.003837/0.5618, allocations: 1.466 MB / 0.6219 GB, free: 4.613 MB / 426.7 MB
Notification: Model statistics after passing the back-end for simulation:
 * Number of independent subsystems: 5
 * Number of states: 0 ()
 * Number of discrete variables: 390 ($whenCondition1,P2.activeConOut.anychange,P2.delayPassedOut.anytrue,P2.delayPassedOut.numtrue,P2.enableOut.state128[1],P2.enableOut.state128[2],P2.enableOut.state128[3],P2.enableOut.state128[4],P2.enableOut.arcWeightSum,P2.enableOut.nremTAout,P2.enableOut.nTAout,P2.enableOut.k,P2.enableOut.posTE,P2.enableOut.randNum,P2.enableOut.sumEnablingProbTAout,P2.enableOut.endWhile,P2.enableOut.Index,P2.enableOut.benefitMax,P2.enableOut.valid,P2.enableOut.benefitLimit,$whenCondition2,P3.activeConOut.anychange,P3.delayPassedOut.anytrue,P3.delayPassedOut.numtrue,P3.enableOut.state128[1],P3.enableOut.state128[2],P3.enableOut.state128[3],P3.enableOut.state128[4],P3.enableOut.arcWeightSum,P3.enableOut.nremTAout,P3.enableOut.nTAout,P3.enableOut.k,P3.enableOut.posTE,P3.enableOut.randNum,P3.enableOut.sumEnablingProbTAout,P3.enableOut.endWhile,P3.enableOut.Index,P3.enableOut.benefitMax,P3.enableOut.valid,P3.enableOut.benefitLimit,$whenCondition3,P4.activeConOut.anychange,P4.delayPassedOut.anytrue,P4.delayPassedOut.numtrue,P4.enableOut.state128[1],P4.enableOut.state128[2],P4.enableOut.state128[3],P4.enableOut.state128[4],P4.enableOut.arcWeightSum,P4.enableOut.nremTAout,P4.enableOut.nTAout,P4.enableOut.k,P4.enableOut.posTE,P4.enableOut.randNum,P4.enableOut.sumEnablingProbTAout,P4.enableOut.endWhile,P4.enableOut.Index,P4.enableOut.benefitMax,P4.enableOut.valid,P4.enableOut.benefitLimit,$whenCondition4,P5.activeConOut.anychange,P5.delayPassedOut.anytrue,P5.delayPassedOut.numtrue,P5.enableOut.state128[1],P5.enableOut.state128[2],P5.enableOut.state128[3],P5.enableOut.state128[4],P5.enableOut.arcWeightSum,P5.enableOut.nremTAout,P5.enableOut.nTAout,P5.enableOut.k,P5.enableOut.posTE,P5.enableOut.randNum,P5.enableOut.sumEnablingProbTAout,P5.enableOut.endWhile,P5.enableOut.Index,P5.enableOut.benefitMax,P5.enableOut.valid,P5.enableOut.benefitLimit,T1.active,T2.active,T3.active,T4.active,T5.active,$whenCondition34,$whenCondition33,$whenCondition35,$whenCondition32,$whenCondition31,$whenCondition30,$whenCondition29,$whenCondition28,$whenCondition27,$whenCondition26,$whenCondition25,$whenCondition24,$whenCondition23,$whenCondition21,$whenCondition20,$whenCondition22,$whenCondition18,$whenCondition17,$whenCondition19,$whenCondition15,$whenCondition14,$whenCondition16,$whenCondition12,$whenCondition11,$whenCondition13,$whenCondition5,$whenCondition6,$whenCondition7,$whenCondition8,$whenCondition9,$whenCondition10,P1.t,P1.outTransition[1].tokenInOut,P1.outTransition[2].tokenInOut,P1.outTransition[3].tokenInOut,P1.outTransition[4].tokenInOut,P1.tokeninout,P1.activeOut[1],P1.activeOut[2],P1.activeOut[3],P1.activeOut[4],P1.activeConOut.vec[1],P1.activeConOut.vec[2],P1.activeConOut.vec[3],P1.activeConOut.vec[4],P1.activeConOut.anychange,P1.delayPassedOut.vec[1],P1.delayPassedOut.vec[2],P1.delayPassedOut.vec[3],P1.delayPassedOut.vec[4],P1.delayPassedOut.anytrue,P1.delayPassedOut.numtrue,P1.delayPassedIn.vec[1],P1.delayPassedIn.anytrue,P1.delayPassedIn.numtrue,P1.firingSumIn.fire[1],P1.firingSumIn.arcWeight[1],P1.firingSumIn.firingSum,P1.firingSumOut.fire[1],P1.firingSumOut.fire[2],P1.firingSumOut.fire[3],P1.firingSumOut.fire[4],P1.firingSumOut.arcWeight[1],P1.firingSumOut.arcWeight[2],P1.firingSumOut.arcWeight[3],P1.firingSumOut.arcWeight[4],P1.firingSumOut.firingSum,P1.enableOut.TAout[1],P1.enableOut.TAout[2],P1.enableOut.TAout[3],P1.enableOut.TAout[4],P1.enableOut.TEout_[1],P1.enableOut.TEout_[2],P1.enableOut.TEout_[3],P1.enableOut.TEout_[4],P1.enableOut.state128[1],P1.enableOut.state128[2],P1.enableOut.state128[3],P1.enableOut.state128[4],P1.enableOut.TEout[1],P1.enableOut.TEout[2],P1.enableOut.TEout[3],P1.enableOut.TEout[4],P1.enableOut.remTAout[1],P1.enableOut.remTAout[2],P1.enableOut.remTAout[3],P1.enableOut.remTAout[4],P1.enableOut.cumEnablingProb[1],P1.enableOut.cumEnablingProb[2],P1.enableOut.cumEnablingProb[3],P1.enableOut.cumEnablingProb[4],P1.enableOut.arcWeightSum,P1.enableOut.nremTAout,P1.enableOut.nTAout,P1.enableOut.k,P1.enableOut.posTE,P1.enableOut.randNum,P1.enableOut.sumEnablingProbTAout,P1.enableOut.endWhile,P1.enableOut.Index,P1.enableOut.benefitMax,P1.enableOut.valid,P1.enableOut.benefitLimit,P1.enableIn.TAein[1],P1.enableIn.active[1],P1.enableIn.TEin_[1],P1.enableIn.state128[1],P1.enableIn.state128[2],P1.enableIn.state128[3],P1.enableIn.state128[4],P1.enableIn.TEin[1],P1.enableIn.remTAin[1],P1.enableIn.cumEnablingProb[1],P1.enableIn.arcWeightSum,P1.enableIn.nremTAin,P1.enableIn.nTAin,P1.enableIn.k,P1.enableIn.posTE,P1.enableIn.randNum,P1.enableIn.sumEnablingProbTAin,P1.enableIn.endWhile,P1.enableIn.Index,P1.enableIn.benefitMax,P1.enableIn.valid,P1.enableIn.benefitLimit,T1.firingTime,T1.fireTime,T1.delayPassed,T1.ani,T1.activation.tIntOut[1],T1.activation.arcWeightIntOut[1],T1.activation.maxTokensInt[1],T1.activation.active,T2.firingTime,T2.fireTime,T2.delayPassed,T2.ani,T2.activation.tIntIn[1],T2.activation.tIntOut[1],T2.activation.arcWeightIntIn[1],T2.activation.minTokensInt[1],T2.activation.maxTokensInt[1],T2.activation.active,T3.firingTime,T3.fireTime,T3.delayPassed,T3.ani,T3.activation.tIntIn[1],T3.activation.tIntOut[1],T3.activation.arcWeightIntIn[1],T3.activation.minTokensInt[1],T3.activation.maxTokensInt[1],T3.activation.active,T4.firingTime,T4.fireTime,T4.delayPassed,T4.ani,T4.activation.tIntIn[1],T4.activation.tIntOut[1],T4.activation.arcWeightIntIn[1],T4.activation.minTokensInt[1],T4.activation.maxTokensInt[1],T4.activation.active,T5.firingTime,T5.fireTime,T5.delayPassed,T5.ani,T5.activation.tIntIn[1],T5.activation.tIntOut[1],T5.activation.arcWeightIntIn[1],T5.activation.minTokensInt[1],T5.activation.maxTokensInt[1],T5.activation.active,P2.t,P2.inTransition[1].enabledByInPlaces,P2.tokeninout,P2.delayPassedIn.vec[1],P2.delayPassedIn.anytrue,P2.delayPassedIn.numtrue,P2.firingSumIn.fire[1],P2.firingSumIn.arcWeight[1],P2.firingSumIn.firingSum,P2.firingSumOut.firingSum,P2.enableIn.arcWeight[1],P2.enableIn.TAein[1],P2.enableIn.active[1],P2.enableIn.TEin_[1],P2.enableIn.state128[1],P2.enableIn.state128[2],P2.enableIn.state128[3],P2.enableIn.state128[4],P2.enableIn.TEin[1],P2.enableIn.remTAin[1],P2.enableIn.cumEnablingProb[1],P2.enableIn.arcWeightSum,P2.enableIn.nremTAin,P2.enableIn.nTAin,P2.enableIn.k,P2.enableIn.posTE,P2.enableIn.randNum,P2.enableIn.sumEnablingProbTAin,P2.enableIn.endWhile,P2.enableIn.Index,P2.enableIn.benefitMax,P2.enableIn.valid,P2.enableIn.benefitLimit,P3.t,P3.inTransition[1].enabledByInPlaces,P3.tokeninout,P3.delayPassedIn.vec[1],P3.delayPassedIn.anytrue,P3.delayPassedIn.numtrue,P3.firingSumIn.fire[1],P3.firingSumIn.arcWeight[1],P3.firingSumIn.firingSum,P3.firingSumOut.firingSum,P3.enableIn.arcWeight[1],P3.enableIn.TAein[1],P3.enableIn.active[1],P3.enableIn.TEin_[1],P3.enableIn.state128[1],P3.enableIn.state128[2],P3.enableIn.state128[3],P3.enableIn.state128[4],P3.enableIn.TEin[1],P3.enableIn.remTAin[1],P3.enableIn.cumEnablingProb[1],P3.enableIn.arcWeightSum,P3.enableIn.nremTAin,P3.enableIn.nTAin,P3.enableIn.k,P3.enableIn.posTE,P3.enableIn.randNum,P3.enableIn.sumEnablingProbTAin,P3.enableIn.endWhile,P3.enableIn.Index,P3.enableIn.benefitMax,P3.enableIn.valid,P3.enableIn.benefitLimit,P4.t,P4.inTransition[1].enabledByInPlaces,P4.tokeninout,P4.delayPassedIn.vec[1],P4.delayPassedIn.anytrue,P4.delayPassedIn.numtrue,P4.firingSumIn.fire[1],P4.firingSumIn.arcWeight[1],P4.firingSumIn.firingSum,P4.firingSumOut.firingSum,P4.enableIn.arcWeight[1],P4.enableIn.TAein[1],P4.enableIn.active[1],P4.enableIn.TEin_[1],P4.enableIn.state128[1],P4.enableIn.state128[2],P4.enableIn.state128[3],P4.enableIn.state128[4],P4.enableIn.TEin[1],P4.enableIn.remTAin[1],P4.enableIn.cumEnablingProb[1],P4.enableIn.arcWeightSum,P4.enableIn.nremTAin,P4.enableIn.nTAin,P4.enableIn.k,P4.enableIn.posTE,P4.enableIn.randNum,P4.enableIn.sumEnablingProbTAin,P4.enableIn.endWhile,P4.enableIn.Index,P4.enableIn.benefitMax,P4.enableIn.valid,P4.enableIn.benefitLimit,P5.t,P5.inTransition[1].enabledByInPlaces,P5.tokeninout,P5.delayPassedIn.vec[1],P5.delayPassedIn.anytrue,P5.delayPassedIn.numtrue,P5.firingSumIn.fire[1],P5.firingSumIn.arcWeight[1],P5.firingSumIn.firingSum,P5.firingSumOut.firingSum,P5.enableIn.arcWeight[1],P5.enableIn.TAein[1],P5.enableIn.active[1],P5.enableIn.TEin_[1],P5.enableIn.state128[1],P5.enableIn.state128[2],P5.enableIn.state128[3],P5.enableIn.state128[4],P5.enableIn.TEin[1],P5.enableIn.remTAin[1],P5.enableIn.cumEnablingProb[1],P5.enableIn.arcWeightSum,P5.enableIn.nremTAin,P5.enableIn.nTAin,P5.enableIn.k,P5.enableIn.posTE,P5.enableIn.randNum,P5.enableIn.sumEnablingProbTAin,P5.enableIn.endWhile,P5.enableIn.Index,P5.enableIn.benefitMax,P5.enableIn.valid,P5.enableIn.benefitLimit)
 * Number of discrete states: 263 (P1.firingSumOut.firingSum,P1.firingSumIn.firingSum,P2.firingSumOut.firingSum,P2.firingSumIn.firingSum,P3.firingSumOut.firingSum,P3.firingSumIn.firingSum,P4.firingSumOut.firingSum,P4.firingSumIn.firingSum,P5.firingSumOut.firingSum,P5.firingSumIn.firingSum,P1.tokeninout,P5.t,P4.t,P3.t,P2.t,P1.t,P1.activeOut[1],P1.activeOut[2],P1.activeOut[3],P1.activeOut[4],T5.activation.active,T5.delayPassed,P5.delayPassedIn.numtrue,P5.delayPassedIn.anytrue,T4.activation.active,T4.delayPassed,P4.delayPassedIn.numtrue,P4.delayPassedIn.anytrue,T3.activation.active,T3.delayPassed,P3.delayPassedIn.numtrue,P3.delayPassedIn.anytrue,T2.activation.active,T2.delayPassed,P2.delayPassedIn.numtrue,P2.delayPassedIn.anytrue,T1.activation.active,T1.delayPassed,P1.delayPassedIn.numtrue,P1.delayPassedIn.anytrue,P1.enableIn.TEin_[1],P1.enableIn.valid,P1.enableIn.benefitLimit,P1.enableIn.benefitMax,P1.enableIn.posTE,P1.enableIn.k,P1.enableIn.endWhile,P1.enableIn.state128[4],P1.enableIn.state128[3],P1.enableIn.state128[2],P1.enableIn.state128[1],P1.enableIn.randNum,P1.enableIn.cumEnablingProb[1],P1.enableIn.sumEnablingProbTAin,P1.enableIn.nTAin,P1.enableIn.nremTAin,P1.enableIn.remTAin[1],P1.enableIn.Index,$whenCondition6,P1.enableIn.arcWeightSum,P1.enableIn.TEin[1],P1.delayPassedOut.numtrue,P1.delayPassedOut.anytrue,P1.activeConOut.anychange,i,P1.activeConOut.vec[i],P1.enableOut.TEout_[4],P1.enableOut.TEout_[3],P1.enableOut.TEout_[2],P1.enableOut.TEout_[1],P1.enableOut.valid,P1.enableOut.benefitLimit,P1.enableOut.benefitMax,P1.enableOut.posTE,P1.enableOut.k,P1.enableOut.endWhile,P1.enableOut.state128[4],P1.enableOut.state128[3],P1.enableOut.state128[2],P1.enableOut.state128[1],P1.enableOut.randNum,P1.enableOut.cumEnablingProb[4],P1.enableOut.cumEnablingProb[3],P1.enableOut.cumEnablingProb[2],P1.enableOut.cumEnablingProb[1],P1.enableOut.sumEnablingProbTAout,P1.enableOut.nTAout,P1.enableOut.nremTAout,P1.enableOut.remTAout[4],P1.enableOut.remTAout[3],P1.enableOut.remTAout[2],P1.enableOut.remTAout[1],P1.enableOut.Index,$whenCondition5,P1.enableOut.arcWeightSum,P1.enableOut.TEout[4],P1.enableOut.TEout[3],P1.enableOut.TEout[2],P1.enableOut.TEout[1],P2.enableIn.TEin_[1],P2.enableIn.valid,P2.enableIn.benefitLimit,P2.enableIn.benefitMax,P2.enableIn.posTE,P2.enableIn.k,P2.enableIn.endWhile,P2.enableIn.state128[4],P2.enableIn.state128[3],P2.enableIn.state128[2],P2.enableIn.state128[1],P2.enableIn.randNum,P2.enableIn.cumEnablingProb[1],P2.enableIn.sumEnablingProbTAin,P2.enableIn.nTAin,P2.enableIn.nremTAin,P2.enableIn.remTAin[1],P2.enableIn.Index,$whenCondition7,P2.enableIn.arcWeightSum,P2.enableIn.TEin[1],P5.enableIn.TEin_[1],P5.enableIn.valid,P5.enableIn.benefitLimit,P5.enableIn.benefitMax,P5.enableIn.posTE,P5.enableIn.k,P5.enableIn.endWhile,P5.enableIn.state128[4],P5.enableIn.state128[3],P5.enableIn.state128[2],P5.enableIn.state128[1],P5.enableIn.randNum,P5.enableIn.cumEnablingProb[1],P5.enableIn.sumEnablingProbTAin,P5.enableIn.nTAin,P5.enableIn.nremTAin,P5.enableIn.remTAin[1],P5.enableIn.Index,$whenCondition10,P5.enableIn.arcWeightSum,P5.enableIn.TEin[1],P3.enableIn.TEin_[1],P3.enableIn.valid,P3.enableIn.benefitLimit,P3.enableIn.benefitMax,P3.enableIn.posTE,P3.enableIn.k,P3.enableIn.endWhile,P3.enableIn.state128[4],P3.enableIn.state128[3],P3.enableIn.state128[2],P3.enableIn.state128[1],P3.enableIn.randNum,P3.enableIn.cumEnablingProb[1],P3.enableIn.sumEnablingProbTAin,P3.enableIn.nTAin,P3.enableIn.nremTAin,P3.enableIn.remTAin[1],P3.enableIn.Index,$whenCondition8,P3.enableIn.arcWeightSum,P3.enableIn.TEin[1],P4.enableIn.TEin_[1],P4.enableIn.valid,P4.enableIn.benefitLimit,P4.enableIn.benefitMax,P4.enableIn.posTE,P4.enableIn.k,P4.enableIn.endWhile,P4.enableIn.state128[4],P4.enableIn.state128[3],P4.enableIn.state128[2],P4.enableIn.state128[1],P4.enableIn.randNum,P4.enableIn.cumEnablingProb[1],P4.enableIn.sumEnablingProbTAin,P4.enableIn.nTAin,P4.enableIn.nremTAin,P4.enableIn.remTAin[1],P4.enableIn.Index,$whenCondition9,P4.enableIn.arcWeightSum,P4.enableIn.TEin[1],P5.enableOut.benefitLimit,P5.enableOut.valid,P5.enableOut.benefitMax,P5.enableOut.Index,P5.enableOut.endWhile,P5.enableOut.sumEnablingProbTAout,P5.enableOut.state128[4],P5.enableOut.state128[3],P5.enableOut.state128[2],P5.enableOut.state128[1],P5.enableOut.randNum,P5.enableOut.posTE,P5.enableOut.k,P5.enableOut.nTAout,P5.enableOut.nremTAout,$whenCondition4,P5.enableOut.arcWeightSum,P5.delayPassedOut.numtrue,P5.delayPassedOut.anytrue,P5.activeConOut.anychange,P4.enableOut.benefitLimit,P4.enableOut.valid,P4.enableOut.benefitMax,P4.enableOut.Index,P4.enableOut.endWhile,P4.enableOut.sumEnablingProbTAout,P4.enableOut.state128[4],P4.enableOut.state128[3],P4.enableOut.state128[2],P4.enableOut.state128[1],P4.enableOut.randNum,P4.enableOut.posTE,P4.enableOut.k,P4.enableOut.nTAout,P4.enableOut.nremTAout,$whenCondition3,P4.enableOut.arcWeightSum,P4.delayPassedOut.numtrue,P4.delayPassedOut.anytrue,P4.activeConOut.anychange,P3.enableOut.benefitLimit,P3.enableOut.valid,P3.enableOut.benefitMax,P3.enableOut.Index,P3.enableOut.endWhile,P3.enableOut.sumEnablingProbTAout,P3.enableOut.state128[4],P3.enableOut.state128[3],P3.enableOut.state128[2],P3.enableOut.state128[1],P3.enableOut.randNum,P3.enableOut.posTE,P3.enableOut.k,P3.enableOut.nTAout,P3.enableOut.nremTAout,$whenCondition2,P3.enableOut.arcWeightSum,P3.delayPassedOut.numtrue,P3.delayPassedOut.anytrue,P3.activeConOut.anychange,P2.enableOut.benefitLimit,P2.enableOut.valid,P2.enableOut.benefitMax,P2.enableOut.Index,P2.enableOut.endWhile,P2.enableOut.sumEnablingProbTAout,P2.enableOut.state128[4],P2.enableOut.state128[3],P2.enableOut.state128[2],P2.enableOut.state128[1],P2.enableOut.randNum,P2.enableOut.posTE,P2.enableOut.k,P2.enableOut.nTAout,P2.enableOut.nremTAout,$whenCondition1,P2.enableOut.arcWeightSum,P2.delayPassedOut.numtrue,P2.delayPassedOut.anytrue,P2.activeConOut.anychange)
 * Number of clocked states: 0 ()
 * Top-level inputs: 0
Notification: Strong component statistics for simulation (228):
 * Single equations (assignments): 167
 * Array equations: 1
 * Algorithm blocks: 40
 * Record equations: 0
 * When equations: 20
 * If-equations: 0
 * Equation systems (not torn): 0
 * Torn equation systems: 0
 * Mixed (continuous/discrete) equation systems: 0
Notification: Performance of Backend phase and start with SimCode phase: time 0.001795/0.5636, allocations: 1.015 MB / 0.6229 GB, free: 3.605 MB / 426.7 MB
Notification: Performance of simCode: created initialization part: time 0.02295/0.5866, allocations: 14.3 MB / 0.6369 GB, free: 4.719 MB / 442.7 MB
Notification: Performance of simCode: created event and clocks part: time 6.472e-06/0.5866, allocations: 4.25 kB / 0.6369 GB, free: 4.715 MB / 442.7 MB
Notification: Performance of simCode: created simulation system equations: time 0.01588/0.6025, allocations: 18.54 MB / 0.655 GB, free: 1.699 MB / 458.7 MB
Notification: Performance of simCode: created of all other equations (e.g. parameter, nominal, assert, etc): time 0.002747/0.6053, allocations: 0.5639 MB / 0.6555 GB, free: 1.152 MB / 458.7 MB
Notification: Performance of simCode: created linear, non-linear and system jacobian parts: time 0.01746/0.6228, allocations: 10.86 MB / 0.6661 GB, free: 6.262 MB / 474.7 MB
Notification: Performance of simCode: some other stuff during SimCode phase: time 0.001693/0.6245, allocations: 2.25 MB / 0.6683 GB, free: 3.977 MB / 474.7 MB
Notification: Performance of simCode: alias equations: time 0.002305/0.6269, allocations: 0.9567 MB / 0.6693 GB, free: 3.016 MB / 474.7 MB
Notification: Performance of simCode: all other stuff during SimCode phase: time 0.000481/0.6273, allocations: 223.4 kB / 0.6695 GB, free: 2.801 MB / 474.7 MB
Notification: Performance of SimCode: time 5.81e-07/0.6274, allocations: 0 / 0.6695 GB, free: 2.801 MB / 474.7 MB
Notification: Performance of Templates: time 0.2996/0.927, allocations: 63.55 MB / 0.7315 GB, free: 112.8 MB / 474.7 MB
make -j1 -f PNlib_master_PNlib.Examples.DisTest.PrioTest.makefile
(rm -f PNlib_master_PNlib.Examples.DisTest.PrioTest.pipe ; mkfifo PNlib_master_PNlib.Examples.DisTest.PrioTest.pipe ; head -c 1048576 < PNlib_master_PNlib.Examples.DisTest.PrioTest.pipe >> ../files/PNlib_master_PNlib.Examples.DisTest.PrioTest.sim & ./PNlib_master_PNlib.Examples.DisTest.PrioTest  -abortSlowSimulation -alarm=480  -emit_protected -lv LOG_STATS > PNlib_master_PNlib.Examples.DisTest.PrioTest.pipe 2>&1)
diffSimulationResults("PNlib_master_PNlib.Examples.DisTest.PrioTest_res.mat","/home/runner/work/PNlib/PNlib/ReferenceFiles/PNlib.Examples.DisTest.PrioTest.mat","../files/PNlib_master_PNlib.Examples.DisTest.PrioTest.diff",relTol=0.003,relTolDiffMinMax=0.003,rangeDelta=0.001)
Reference file matches
