// name: PNlib.Examples.ConTest.Conflict
// keywords: PNlib, continuous
// status: correct

loadFile("../../PNlib/package.mo"); getErrorString();
simulate(PNlib.Examples.ConTest.Conflict); getErrorString();
res := OpenModelica.Scripting.compareSimulationResults("PNlib.Examples.ConTest.Conflict_res.mat",
  "../../ReferenceFiles/PNlib.Examples.ConTest.Conflict.mat",
  "PNlib.Examples.ConTest.Conflict_diff.csv", 0.01, 0.0001,
  {
    "P1.t",
    "P2.t",
    "P3.t",
    "T1.fire",
    "T1.instantaneousSpeed",
    "T1.maximumSpeed",
    "T2.fire",
    "T2.instantaneousSpeed",
    "T2.maximumSpeed",
    "T3.fire",
    "T3.instantaneousSpeed",
    "T3.maximumSpeed"
  }); getErrorString();

// Result:
// true
// "Notification: Automatically loaded package Modelica 3.2.1 due to uses annotation.
// Notification: Automatically loaded package Complex 3.2.1 due to uses annotation.
// Notification: Automatically loaded package ModelicaServices 3.2.1 due to uses annotation.
// "
// record SimulationResult
//     resultFile = "",
//     simulationOptions = "startTime = 0.0, stopTime = 10.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'PNlib.Examples.ConTest.Conflict', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "Simulation execution failed for model: PNlib.Examples.ConTest.Conflict
// assert            | debug   | No system for the symbolic initialization was generated.
// assert            | info    | simulation terminated by an assertion at initialization
// "
// end SimulationResult;
// "Notification: The given system is mixed-determined.   [index > 0]
// Notification: The given system is mixed-determined.   [index > 1]
// Notification: The given system is mixed-determined.   [index > 2]
// Notification: The given system is mixed-determined.   [index > 3]
// Error: No system for the symbolic initialization was generated.
// "
// {"Error get time!"}
// ""
// endResult
